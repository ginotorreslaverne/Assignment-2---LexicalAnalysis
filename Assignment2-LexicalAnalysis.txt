// -----------------------------------------------------------------------------------------------------------------------
//                                               Name(s) Gino Torres, 
//                                               Course CMPS 455, Fall 2024
//                                               Assignment Assignment 2 - LexicalAnalyzer
//                                               Due date September/26/2024
// Purpose: 
/* 
I attached a simple computer language grammar to this assignment.

Please complete the lexical analyzer of your compiler, just as I talked in classroom, you only need to define the pattern and corresponding actions. Please reference the sample in slide.
*/
//------------------------------------------------------------------------------------------------------------------------

%{
#include <stdio.h>
%}

%%

"//".*                                                   /* Comment line - action: skip/don't do anything */;
"int"|"real"|"if"|"then"|"else"|"while"                  { printf("%s: is a Keyword\n", yytext); }
[a-zA-Z][a-zA-Z0-9]{0,63}                                { printf("%s: is an Identifier\n", yytext); }
[+-/*=<>!]+                                              { printf("%s: is an Operator\n", yytext); }
[(){};]                                                  { printf("%s: is a Delimiter\n", yytext); }
['"]                                                     { printf("%s: is a Quotation Mark\n", yytext); }
[0-9]+                                                   { printf("%s: is an Integer\n", yytext); }
[eE][+|-]?[0-9]+                                         { printf("%s: is an Exponent\n", yytext); }
\.[0-9]+                                                 { printf("%s: is a Decimal Number\n", yytext); }
[0-9]+([eE][+|-]?[0-9]+).[0-9]+([eE][+|-]?[0-9]+|Îµ)      { printf("%s: is a Real Number\n", yytext); }

%%

int main()
{
        yylex();
        return 0;
}
